{
  "x-generator": "NSwag v13.5.1.0 (NJsonSchema v10.1.15.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "MemberPortal Service User APIs",
    "description": "JSON API services for the User Service.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://memportal-tst.memberportalserviceuserhost.tst.cloud.hma.local"
    }
  ],
  "paths": {
    "/v1/brand": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Get a brand\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "Brand_GetBrand",
        "parameters": [
          {
            "name": "X-HMA-Brand",
            "in": "header",
            "description": "The brandname. ",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "description": "The locale to use. ",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy ID of the logged in user.  This is used to determine if the information is overridden by the user's group/plan,",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandingServiceItem"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/brand/{brand}": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Get a brand by query parameter\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "Brand_GetBrandNoCache",
        "parameters": [
          {
            "name": "brand",
            "in": "path",
            "required": true,
            "description": "The brandname. ",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "description": "The locale to use. ",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy ID of the logged in user.  This is used to determine if the information is overridden by the user's group/plan,",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandingServiceItem"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/brand/{brand}/features": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Get a list of brand features by query parameter\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "Brand_GetBrandFeatures",
        "parameters": [
          {
            "name": "brand",
            "in": "path",
            "required": true,
            "description": "The brandname. ",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "description": "The locale to use. This is not used right now (optional)",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy ID of the logged in user.  This is not used right now (optional)",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandFeatureResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/claims/{id}": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Get a claim by id.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "Claims_GetClaim",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The claim id to retrieve. ",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the caller",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "description": "The locale of the call",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResultDto"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/claims/{id}/eob": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Get a claim eob by id.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "Claims_GetClaimEob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The id of the claim",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the caller",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "description": "The locale of the call",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            "
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/claims": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Search for claims.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "Claims_Claims",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy ID of the caller",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "description": "The locale of the call",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "dependentPolicyId",
            "in": "query",
            "description": "Optional dependent policy id to use instead of caller policy id",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "search",
            "in": "query",
            "description": "The claim number to search for",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date for the search",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date for the search",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "order",
            "in": "query",
            "description": "Direction of the search sort",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "What field to sort by",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "currentPage",
            "in": "query",
            "description": "If the data is being returned by page, this is the current page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 9
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of results to return when returning data by page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            },
            "x-position": 10
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResultsDto"
                }
              }
            }
          }
        }
      }
    },
    "/v1/claims/export": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Export claim information.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "Claims_Export",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy ID of the caller",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "description": "The locale of the call",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "dependentPolicyId",
            "in": "query",
            "description": "Optional dependent policy id to use instead of caller policy id",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "search",
            "in": "query",
            "description": "The claim number to search for",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date for the search",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date for the search",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "currentPage",
            "in": "query",
            "description": "If the data is being returned by page, this is the current page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 7
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of results to return when returning data by page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 8
          },
          {
            "name": "order",
            "in": "query",
            "description": "Direction of the search sort",
            "schema": {
              "type": "string",
              "default": "ASC",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "What field to sort by",
            "schema": {
              "type": "string",
              "default": "",
              "nullable": true
            },
            "x-position": 10
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/v1/claims/summary": {
      "get": {
        "tags": [
          "Claims"
        ],
        "summary": "Get a spending report\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "Claims_SpendingSummary",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy of the caller",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "description": "The locale of the call",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date indicating when to begin including claims in this report",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date indicating the last date to use in this report",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpendingReportResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/conversations": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get all conversations for a policy holder\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "Conversations_GetConversations",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the owner of these messages in the CRM",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "page",
            "in": "query",
            "description": "When returning paged results, this indicates the page that is being asked for",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The limit of number of conversations to be returned",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort order of the returned data (ASC or DESC)",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "order",
            "in": "query",
            "description": "The sort order of the returned conversations",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversations"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/conversations/unread": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get the count of unread conversations and their IDs\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "Conversations_GetUnreadConversationCount",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the owner of these messages in the CRM",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnreadConversations"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/conversations/{id}": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get the Thread of items in a conversation\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "Conversations_GetConversationById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The id of the conversation",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the owner of these messages in the CRM",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationThread"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/conversations/{id}/markread": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Mark a conversation read\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "Conversations_MarkConversationRead",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The id of the conversation",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the owner of these messages in the CRM",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnStatusMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/conversations/question": {
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Ask a Question\n            ",
        "description": "This endpoint will never be reached.  The APIM will redirect this call directly to the Messaging service\n            ",
        "operationId": "Conversations_AskAQuestion",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the owner of these messages in the CRM",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "QuestionType": {
                    "type": "string",
                    "nullable": true
                  },
                  "Topic": {
                    "type": "string",
                    "nullable": true
                  },
                  "Body": {
                    "type": "string",
                    "nullable": true
                  },
                  "Attachments": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "$ref": "#/components/schemas/MessageAttachment"
                    }
                  },
                  "ClaimNumber": {
                    "type": "string",
                    "nullable": true
                  },
                  "Specialty": {
                    "type": "string",
                    "nullable": true
                  },
                  "Zip": {
                    "type": "string",
                    "nullable": true
                  },
                  "TravelLength": {
                    "type": "string",
                    "nullable": true
                  },
                  "PolicyId": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "type": "string",
                      "format": "guid"
                    }
                  },
                  "ProofOfCoverageType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ProofOfCoveragePolicyState": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnStatusMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/conversations/submit-claim": {
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Submit a claim\n            ",
        "description": "This endpoint will never be reached.  The APIM will redirect this call directly to the Messaging service\n            ",
        "operationId": "Conversations_SubmitClaim",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the owner of these messages in the CRM",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "Category": {
                    "type": "string",
                    "nullable": true
                  },
                  "DateOfService": {
                    "type": "string",
                    "nullable": true
                  },
                  "ServiceProviderName": {
                    "type": "string",
                    "nullable": true
                  },
                  "Attachments": {
                    "type": "array",
                    "nullable": true,
                    "items": {
                      "$ref": "#/components/schemas/MessageAttachment"
                    }
                  },
                  "ReimbursementTo": {
                    "type": "string",
                    "nullable": true
                  },
                  "IsWorkRelated": {
                    "type": "string",
                    "nullable": true
                  },
                  "PolicyId": {
                    "type": "string",
                    "format": "guid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnStatusMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/conversations/attachment/{id}": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Call to get the specified attachment document.\n            ",
        "description": "The attachment documents are stored on a azure blob storage and retrieved from the crm service\n            ",
        "operationId": "Conversations_GetAttachmentDocumentByUrl",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The id of the document to retrieve. ",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "An image file of the requested document\n            "
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/coverage": {
      "get": {
        "tags": [
          "Coverage"
        ],
        "summary": "Get Coverage for Policy.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "Coverage_GetCoverageForPolicy",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the caller",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "dependentPolicyId",
            "in": "query",
            "description": "Optional policy id. If provided use this instead for a dependent",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoverageObject"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/faq": {
      "get": {
        "tags": [
          "Faq"
        ],
        "summary": "Get FAQs.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "Faq_GetFAQs",
        "parameters": [
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Brand",
            "in": "header",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "isMobile",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FAQResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Return user information for the logged in user.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_GetUser",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the caller",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "emailAddress",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserServiceItemResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/email": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint that gets a Policy from the service.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_GetUserEmail",
        "parameters": [
          {
            "name": "policyId",
            "in": "query",
            "description": "The Policy item identifier to retrieve. ",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the Policy.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEmail"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/register-device": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Write a push notification token.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_SetPushToken",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The Policy Id of the user to update",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "aToken",
          "description": "The Push Notification token information to save with the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushToken"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserServiceItem"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/delete-device": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a push notification token.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_DeletePushToken",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The Policy Id of the user to update",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "aToken",
          "description": "The Push Notification token information to save with the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushToken"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStatusMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/send-push": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Send a push notification\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_SendPushNotification",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The Policy Id of the user to send the notification to",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "payload",
          "description": "The payload information to send in the push notification",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushPayload"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStatusMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/id-card": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Return an idcard for the policyId.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_GetIdCard",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the User whose card is being requested.  this comes from a header",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "side",
            "in": "query",
            "description": "The side of the card to return.  Options are \"front\", \"back\", \"both\".  If omitted, then it returns both",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "force",
            "in": "query",
            "description": "Tells whether the image cache should be bypassed to get a fresh image from the card service",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "format",
            "in": "query",
            "description": "The format of the returned image.  Options are \"jpeg\", \"png\", or \"pdf\" (default is \"pdf\")",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "dependentPolicyId",
            "in": "query",
            "description": "If you want to see a dependent's ID card, pass that dependent's policyId in the optional dependentPolicyId parameter",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberIdCard"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/id-card-mobile": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "(Mobile) Return an idcard for the policyId.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_GetIdCardDirect",
        "parameters": [
          {
            "name": "policyId",
            "in": "query",
            "description": "The policy id of the User whose card is being requested. This comes from a query parameter",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "side",
            "in": "query",
            "description": "The side of the card to return.  Options are \"front\", \"back\", \"both\".  If omitted, then it returns both",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "force",
            "in": "query",
            "description": "Tells whether the image cache should be bypassed to get a fresh image from the card service",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "format",
            "in": "query",
            "description": "The format of the returned image.  Options are \"jpeg\", \"png\", or \"pdf\" (default is \"pdf\")",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "dependentPolicyId",
            "in": "query",
            "description": "If you want to see a dependent's ID card, pass that dependent's policyId in the optional dependentPolicyId parameter",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            "
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/id-card/share": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Share an idcard for the policyId.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_ShareIdCard",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the user whose card is being shared. ",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "shareRequest",
          "description": "The information about who the card is being shared with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareIdCardRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStatusMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/communication-preferences": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the communication preferences for the policyId.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_GetCommPreferences",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the user whose communication preferences are being requested. ",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationPreferencesResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Set the communication preferences for the policyId.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_SetCommPreferences",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the user whose communications preferences are being updated. ",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "CommunicationPreferencesRequest",
          "description": "The communications preferences object to save",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommunicationPreferencesRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunicationPreferencesResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/access-forms": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Return the access forms for the policyId.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_GetAccessForms",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id. ",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessFormsResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/account-access/request": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Request access to another user's data for the policyId.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_RequestAccess",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the user who is requesting access. ",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Brand",
            "in": "header",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "accessRequestItem",
          "description": "The information about whose information is being requested",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessRequestItem"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DependentItem"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/account-access/share": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Grant/deny access to another user's data for the policyId.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_SetShareAccess",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id of the user who is granting access. ",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "accessGrantDeny",
          "description": "The grant/deny rights of the access being granted",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessGrantDeny"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DependentItem"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/notification": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the homepage banner (notifications) information.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_GetBannerNotification",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id. ",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/benefits": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the Benefits information for a user.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_GetBenefits",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id. ",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "description": "The locale for returning localized information",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BenefitProductLinkGroup"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/deductibles": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the deductibles information for a user.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_GetDeductibles",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id. ",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "description": "The locale for returning localized information",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeductibleResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/fas-hsa-other": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the FSA/HSA information for a user.\n            ",
        "description": "Extends the previous controller's action to include better error responses.\n            ",
        "operationId": "User_GetFsaHsa",
        "parameters": [
          {
            "name": "X-HMA-Context",
            "in": "header",
            "description": "The policy id. ",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "X-HMA-Locale",
            "in": "header",
            "description": "The locale for returning localized information",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "An asynchronous result that yields the object.\n            ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FsaHsaResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/runetl": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "RunETL",
        "operationId": "User_RunETL",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BrandingServiceItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "footerLogoUrl": {
            "type": "string",
            "nullable": true
          },
          "idCardLogoUrl": {
            "type": "string",
            "nullable": true
          },
          "insuranceName": {
            "type": "string",
            "nullable": true
          },
          "shortInsuranceName": {
            "type": "string",
            "nullable": true
          },
          "fullInsuranceName": {
            "type": "string",
            "nullable": true
          },
          "absoluteUrl": {
            "type": "string",
            "nullable": true
          },
          "colors": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BrandingColorRef"
              }
            ]
          },
          "support": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BrandingSupportRef"
              }
            ]
          },
          "tosUrl": {
            "type": "string",
            "nullable": true
          },
          "privacyPolicyUrl": {
            "type": "string",
            "nullable": true
          },
          "locale": {
            "type": "string",
            "nullable": true
          },
          "groupNameOverride": {
            "type": "string",
            "nullable": true
          },
          "groupNumberOverride": {
            "type": "string",
            "nullable": true
          },
          "brandName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BrandingColorRef": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "primary": {
            "type": "string",
            "nullable": true
          },
          "primaryMutedLight": {
            "type": "string",
            "nullable": true
          },
          "primaryMutedDark": {
            "type": "string",
            "nullable": true
          },
          "secondaryMuted": {
            "type": "string",
            "nullable": true
          },
          "secondaryMutedLight": {
            "type": "string",
            "nullable": true
          },
          "secondaryMutedLight1": {
            "type": "string",
            "nullable": true
          },
          "gray700": {
            "type": "string",
            "nullable": true
          },
          "accent": {
            "type": "string",
            "nullable": true
          },
          "accentLight": {
            "type": "string",
            "nullable": true
          },
          "accentMutedLight": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BrandingSupportRef": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "workHours": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "BrandFeatureResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "features": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "$ref": "#/components/schemas/FeatureSettings"
            }
          }
        }
      },
      "FeatureSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "brandName": {
            "type": "string",
            "nullable": true
          },
          "featureName": {
            "type": "string",
            "nullable": true
          },
          "available": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ClaimResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "claimNumber": {
            "type": "string",
            "nullable": true
          },
          "policyId": {
            "type": "string",
            "format": "guid"
          },
          "serviceDate": {
            "type": "string",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "nullable": true
          },
          "cobCreditApplied": {
            "type": "boolean"
          },
          "cobCreditAmount": {
            "type": "number",
            "format": "decimal"
          },
          "data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ClaimResultDataDto"
            }
          },
          "totals": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClaimResultTotalsDto"
              }
            ]
          }
        }
      },
      "ClaimResultDataDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "lineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "reasonCodes": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ClaimResultDataReasonCodeDto"
            }
          },
          "charge": {
            "type": "number",
            "format": "decimal"
          },
          "discount": {
            "type": "number",
            "format": "decimal"
          },
          "notCovered": {
            "type": "number",
            "format": "decimal"
          },
          "covered": {
            "type": "number",
            "format": "decimal"
          },
          "otherInsurancePaid": {
            "type": "number",
            "format": "decimal"
          },
          "planPayments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PlanPaymentDto"
            }
          },
          "planSavings": {
            "type": "number",
            "format": "decimal"
          },
          "copay": {
            "type": "number",
            "format": "decimal"
          },
          "coinsurance": {
            "type": "number",
            "format": "decimal"
          },
          "deductible": {
            "type": "number",
            "format": "decimal"
          },
          "totalOwed": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "ClaimResultDataReasonCodeDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "hint": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PlanPaymentDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "paidAt": {
            "type": "number",
            "format": "decimal"
          },
          "planPaid": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "ClaimResultTotalsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "charge": {
            "type": "number",
            "format": "decimal"
          },
          "discount": {
            "type": "number",
            "format": "decimal"
          },
          "notCovered": {
            "type": "number",
            "format": "decimal"
          },
          "covered": {
            "type": "number",
            "format": "decimal"
          },
          "otherInsurancePaid": {
            "type": "number",
            "format": "decimal"
          },
          "planPaid": {
            "type": "number",
            "format": "decimal"
          },
          "planSavings": {
            "type": "number",
            "format": "decimal"
          },
          "copay": {
            "type": "number",
            "format": "decimal"
          },
          "coinsurance": {
            "type": "number",
            "format": "decimal"
          },
          "deductible": {
            "type": "number",
            "format": "decimal"
          },
          "totalOwed": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "ClaimResultsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "meta": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ClaimResultsMetaDto"
              }
            ]
          },
          "data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ClaimResultsDataDto"
            }
          }
        }
      },
      "ClaimResultsMetaDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "policyId": {
            "type": "string",
            "format": "guid"
          },
          "claimNumber": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "sortBy": {
            "$ref": "#/components/schemas/SortBy"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Order": {
        "type": "integer",
        "description": "0 = None\n1 = ASC\n2 = DESC",
        "x-enumNames": [
          "None",
          "ASC",
          "DESC"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "SortBy": {
        "type": "integer",
        "description": "0 = None\n1 = Id\n2 = ClaimNumber\n3 = ServiceDate\n4 = Provider\n5 = TotalCharges\n6 = Status",
        "x-enumNames": [
          "None",
          "Id",
          "ClaimNumber",
          "ServiceDate",
          "Provider",
          "TotalCharges",
          "Status"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "ClaimResultsDataDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "claimNumber": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "serviceDate": {
            "type": "string",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "totalCharges": {
            "type": "number",
            "format": "decimal"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "statusTitle": {
            "type": "string",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SpendingReportResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rangeDates": {
            "type": "string",
            "nullable": true
          },
          "rangePeriod": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SpendingReportData"
            }
          }
        }
      },
      "SpendingReportData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "string",
            "nullable": true
          },
          "hint": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Conversations": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "meta": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MessagesMetaData"
              }
            ]
          },
          "data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Conversation"
            }
          }
        }
      },
      "MessagesMetaData": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "sortBy": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Conversation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "trackingNumber": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "hasAttachments": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "unread": {
            "type": "boolean"
          }
        }
      },
      "UnreadConversations": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "unreadCount": {
            "type": "integer",
            "format": "int32"
          },
          "conversations": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "ConversationThread": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "unread": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ConversationThreadItem"
            }
          }
        }
      },
      "ConversationThreadItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "dateSent": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          },
          "isRead": {
            "type": "boolean"
          },
          "sentBy": {
            "type": "string",
            "nullable": true
          },
          "sentByName": {
            "type": "string",
            "nullable": true
          },
          "hasAttachments": {
            "type": "boolean"
          }
        }
      },
      "Attachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ReturnStatusMessage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "statusMessage": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MessageAttachment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "documentBody": {
            "type": "string",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CoverageObject": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "membersInfo": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CoverageMember"
            }
          },
          "coveragePlans": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CoveragePlan"
            }
          },
          "benefitPlanInfo": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BenefitPlanItem"
            }
          },
          "benefitsCoverage": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BenefitsCoverageItem"
              }
            ]
          }
        }
      },
      "CoverageMember": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "groupMember": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "planCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CoveragePlan": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "BenefitPlanItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "fileList": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SPFileItem"
            }
          }
        }
      },
      "SPFileItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BenefitsCoverageItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fileList": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SPFileItem"
            }
          }
        }
      },
      "FAQResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FAQItemModel"
            }
          }
        }
      },
      "FAQItemModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "html": {
            "type": "string",
            "nullable": true
          },
          "brandName": {
            "type": "string",
            "nullable": true
          },
          "locale": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "isMobile": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "UserServiceItemResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "planStartDate": {
            "type": "string",
            "nullable": true
          },
          "planEndDate": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "groupNumber": {
            "type": "string",
            "nullable": true
          },
          "confidentiality": {
            "type": "boolean"
          },
          "isFirstLogin": {
            "type": "boolean"
          },
          "relationshipToEnrollee": {
            "type": "string",
            "nullable": true
          },
          "dependents": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DependentItem"
            }
          },
          "supportedClaimCategories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ClaimCategoryItem"
            }
          },
          "deductiblePlanYears": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DeductiblePlanYear"
            }
          }
        }
      },
      "DependentItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "haveAccess": {
            "type": "string",
            "nullable": true
          },
          "haveAccessToYours": {
            "type": "string",
            "nullable": true
          },
          "hasAccount": {
            "type": "boolean"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "relationshipToEnrollee": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ClaimCategoryItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DeductiblePlanYear": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "revisionNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserEmail": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "policyId": {
            "type": "string",
            "format": "guid"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserServiceItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "policyId": {
            "type": "string",
            "format": "guid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "pushTokens": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/KeyValuePairOfStringAndString"
            }
          },
          "eobPreference": {
            "type": "string",
            "nullable": true
          },
          "statementPreference": {
            "type": "string",
            "nullable": true
          },
          "generalPreference": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "KeyValuePairOfStringAndString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "PushToken": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "platform": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResponseStatusMessage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "responseCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PushPayload": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "sound": {
            "type": "string",
            "nullable": true
          },
          "messageType": {
            "type": "string",
            "nullable": true
          },
          "refNumber": {
            "type": "string",
            "nullable": true
          },
          "conversationId": {
            "type": "string",
            "nullable": true
          },
          "claimNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MemberIdCard": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "imageData": {
            "type": "string",
            "nullable": true
          },
          "cacheHit": {
            "type": "boolean"
          }
        }
      },
      "ShareIdCardRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dependentPolicyId": {
            "type": "string",
            "format": "guid"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "accepted": {
            "type": "boolean"
          }
        }
      },
      "CommunicationPreferencesResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eob": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CommunicationPreferencesItem"
              }
            ]
          },
          "statements": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CommunicationPreferencesItem"
              }
            ]
          },
          "general": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CommunicationPreferencesItem"
              }
            ]
          }
        }
      },
      "CommunicationPreferencesItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "options": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CommunicationPreferencesOption"
            }
          },
          "selected": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CommunicationPreferencesOption": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CommunicationPreferencesRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eob": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CommunicationPreferencesItem"
              }
            ]
          },
          "statements": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CommunicationPreferencesItem"
              }
            ]
          },
          "general": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CommunicationPreferencesItem"
              }
            ]
          }
        }
      },
      "AccessFormsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "links": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AccessFormItem"
            }
          }
        }
      },
      "AccessFormItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "orSubmitClaim": {
            "type": "boolean"
          }
        }
      },
      "AccessRequestItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dependentPolicyId": {
            "type": "string",
            "format": "guid"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AccessGrantDeny": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dependentPolicyId": {
            "type": "string",
            "format": "guid"
          },
          "allowAccess": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "NotificationResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "actionLabel": {
            "type": "string",
            "nullable": true
          },
          "actionLink": {
            "type": "string",
            "nullable": true
          },
          "actionLinkType": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BenefitProductLinkGroup": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "entries": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkEntry"
            }
          }
        }
      },
      "LinkEntry": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "icon": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "linkType": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "roundTheClockAccess": {
            "type": "boolean"
          }
        }
      },
      "DeductibleResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "inNetwork": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeductibleNetworkGroup"
              }
            ]
          },
          "outOfNetwork": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeductibleNetworkGroup"
              }
            ]
          }
        }
      },
      "DeductibleNetworkGroup": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "categories": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DeductibleCategory"
            }
          }
        }
      },
      "DeductibleCategory": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeductibleRow"
              }
            ]
          }
        }
      },
      "DeductibleRow": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rows": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DeductibleRowDefinition"
            }
          },
          "members": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DeductibleMemberRecord"
            }
          },
          "family": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeductibleFamilyRecord"
              }
            ]
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "actionLinkType": {
            "type": "string",
            "nullable": true
          },
          "actionSource": {
            "type": "string",
            "nullable": true
          },
          "actionLabel": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DeductibleRowDefinition": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "slug": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "subtitle": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DeductibleMemberRecord": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "policyId": {
            "type": "string",
            "format": "guid"
          },
          "deductible": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeductibleSpend"
              }
            ]
          },
          "outOfPocket": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OutOfPocket"
              }
            ]
          },
          "annualBenefitAmount": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AnnualBenefitAmount"
              }
            ]
          },
          "lifetimeBenefit": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LifetimeBenefit"
              }
            ]
          }
        }
      },
      "DeductibleSpend": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "spent": {
            "type": "number",
            "format": "decimal"
          },
          "amountMetThisYear": {
            "type": "number",
            "format": "decimal"
          },
          "max": {
            "type": "number",
            "format": "decimal"
          },
          "carryover": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "OutOfPocket": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "spent": {
            "type": "number",
            "format": "decimal"
          },
          "max": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "AnnualBenefitAmount": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "spent": {
            "type": "number",
            "format": "decimal"
          },
          "max": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "LifetimeBenefit": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "spent": {
            "type": "number",
            "format": "decimal"
          },
          "max": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "DeductibleFamilyRecord": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deductible": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DeductibleSpend"
              }
            ]
          },
          "outOfPocket": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OutOfPocket"
              }
            ]
          }
        }
      },
      "FsaHsaResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/FsaLink"
            }
          }
        }
      },
      "FsaLink": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
}